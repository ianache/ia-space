services:
  # Traefik: Proxy inverso que enruta el tráfico HTTP a los servicios 
  # internos según reglas y dominios configurados.
  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`traefik.lab.iap.com`)
      traefik.http.routers.traefik.entrypoints: web
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    networks:
      - frontend
      - backend

  # Langflow: Plataforma para construir y ejecutar flujos de trabajo de IA 
  # mediante una interfaz visual.
  langflow:
    image: langflowai/langflow:${LANGFLOW_VER:-1.4.1} #latest
    pull_policy: always
    restart: always
    ports:
      - "7860:7860"
    volumes:
      - langflow-data:/app/langflow
    env_file:
    - .env-langflow
    networks:
      - frontend
      - backend
    labels:
      traefik.enable: true
      traefik.http.routers.langflow.rule: Host(`langflow.lab.iap.com`)"
      traefik.http.routers.langflow.entrypoints: web
      traefik.http.services.langflow.loadbalancer.server.port: 7860
  # Redis: Almacenamiento en memoria clave-valor, útil para caché y colas.
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
    - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    env_file:
    - .env-redis
    volumes:
    - redis-data:/data
    networks:
      - backend

  pgvector:
    image: ankane/pgvector:${PGVECTOR_VER:-latest}
    restart: unless-stopped
    env_file:
    - .env-pgvector
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: welcome1
      POSTGRES_DB: pgvector
    #ports:
    #  - "5432:5432"
    # CREATE EXTENSION vector;
    volumes:
    - pgvector-data:/var/lib/postgresql/data
    networks:
      - backend

  # Neo4j: Base de datos de grafos, ideal para almacenar y consultar
  neo4j:
    image: neo4j:latest #5.21.0
    ports:
    - "7474:7474" # HTTP
    - "7687:7687" # Bolt
    volumes:
    - neo4j-data:/data
    env_file:
    - .env-neo4j
    environment:
    - NEO4J_PLUGINS=["apoc", "graph-data-science"]
    #healthcheck:
    #  test: ["CMD", "neo4j", "status"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5
    networks:
      - backend
    labels:
      traefik.enable: true
      traefik.http.routers.neo4j.rule: Host(`neo4j.lab.iap.com`)
      traefik.http.routers.neo4j.entrypoints: web
      traefik.http.services.neo4j.loadbalancer.server.port: 7474

networks:
  frontend:
  backend:

volumes:
  neo4j-data:
  langflow-data:
  pgvector-data:
  redis-data: